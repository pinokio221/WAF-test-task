{"version":3,"sources":["components/Header/Header.module.css","logo.svg","api/api.js","validators/validate.js","components/FormControls/Forms.jsx","components/Header/AddItemModal.jsx","redux/reducers.js","components/Header/Header.jsx","components/Content/ItemOptionsMenu.jsx","components/Content/Shows.jsx","components/Content/Movies.jsx","components/Content/Content.jsx","App.js","reportWebVitals.js","redux/store.js","index.js","components/Content/Content.module.css"],"names":["module","exports","instance","axios","create","baseURL","api","get","response","title","category","itemId","data","post","console","log","put","id","delete","validate","values","errors","forEach","field","asyncValidate","a","status","message","theme","createMuiTheme","palette","type","RenderDatePicker","input","onChange","value","meta","touched","invalid","error","ThemeProvider","utils","DateFnsUtils","DatePicker","helperText","disableFuture","label","views","RenderTextField","custom","TextField","variant","placeholder","size","RenderSelectField","FormControl","InputLabel","htmlFor","Select","native","inputProps","name","RenderRadioButton","rest","RadioGroup","FormControlLabel","control","Radio","useStyles","makeStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","border","boxShadow","shadows","padding","spacing","ReduxAddItemForm","reduxForm","form","props","handleSubmit","pristine","submitting","reset","className","styles","modalTitle","onSubmit","modalForm","titleField","Field","component","typeField","genreField","ratingField","modalButtons","Button","onClick","handleClose","modalBtn","disabled","color","AddItemModal","classes","React","useState","open","setOpen","add_btn","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","formData","formatYear","moment","year","format","addItem","SET_CONTENT","ADD_ITEM","UPDATE_ITEM","REMOVE_ITEM","SET_EDITED_ITEM","initialState","shows","movies","editedItem","totalShows","totalMovies","contentReducer","state","action","map","s","item","index","indexOf","splice","m","Header","wrapper","header_block","logo","src","buttons_block","to","activeClassName","activeLink","btn","this","Component","connect","dispatch","then","addNewItemAction","options","ItemOptionsMenu","anchorEl","setAnchorEl","Boolean","option","editMode","setEditMode","setItemData","setItemId","setEditedItem","optionsMenu","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","style","width","MenuItem","EditModeForm","editCard","cardHeader","itemTitle","editTitleField","editImageField","editGenreField","editLinkField","editModeButtons","itemData","removeItem","editBtn","enableReinitialize","initialValues","content","Shows","submitEditMode","toString","updateItem","showsList","contentCard","contentPhoto","image","genre","rating","watchBlock","typeText","content_wrapper","Movies","moviesList","Content","getContent","getShowsPromise","getMoviesPromise","Promise","all","updateItemAction","removeItemAction","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","compose","applyMiddleware","thunk","logger","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1c766410.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__4Axjt\",\"logo\":\"Header_logo__3_SJs\",\"header_block\":\"Header_header_block__8_0n1\",\"buttons_block\":\"Header_buttons_block__2jNRE\",\"add_btn\":\"Header_add_btn__11W-0\",\"btn\":\"Header_btn__25p7W\",\"modalTitle\":\"Header_modalTitle__1wbz9\",\"titleField\":\"Header_titleField__rIb98\",\"typeField\":\"Header_typeField__38PlN\",\"genreField\":\"Header_genreField__2Pejq\",\"ratingField\":\"Header_ratingField__2hQ3T\",\"modalButtons\":\"Header_modalButtons__1sYhb\",\"modalBtn\":\"Header_modalBtn__2DC_l\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://waf-test-app.herokuapp.com/api/content'\n})\n\nexport const api = {\n    async getShows() {\n        try {\n            const response = await instance.get('/shows');\n            return response;\n        } catch (error) {\n            return error.response;\n        }\n    },\n    async getMovies() {\n        try {\n            const response = await instance.get('/movies');\n            return response;\n        } catch (error) {\n            return error.response;\n        }\n    },\n    async titleValidation(title, category, itemId) {\n        try {\n            const response = await instance.get(`/validation?title=${title}&category=${category}&itemId=${itemId}`);\n            return response;\n            \n        } catch (error) {\n            return error.response;\n        }\n    },\n    async addItem(data) {\n        try {\n            const response = await instance.post('/add', { data })\n            return response;\n        } catch (error) {\n            return error.response;\n        }\n    },\n    async updateItem(data) {\n        console.log(data)\n        try {\n            const response = await instance.put('/update', {data});\n            return response;\n        } catch (error) {\n            return error.response;\n        }\n    },\n    async removeItem(id, category) {\n        try {\n            console.log(id, category)\n            const response = await instance.delete(`/remove?id=${id}&category=${category}`);\n            return response;\n        } catch (error) {\n            return error.response;\n        }\n    }\n\n}","import { api } from '../api/api'\n\n\nexport const validate = values => {\n    const errors = {}\n    const requiredFields = [\n      'title',\n      'category',\n      'year',\n      'genre',\n      'rating',\n      'image',\n      'link'\n    ]\n    requiredFields.forEach(field => {\n      if (!values[field]) {\n        errors[field] = 'Required'\n      }\n    })\n\n    return errors\n  }\n\nexport const asyncValidate = async (values) => {\n  console.log(values)\n  if(values.title && values.category) {\n    const response = await api.titleValidation(values.title, values.category, values.id)\n    if (response.status === 302) {\n      throw { title: response.data.message }\n    }\n  }\n  \n}","import React from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fade from '@material-ui/core/Fade';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { Field, reduxForm } from \"redux-form\"\nimport TextField from '@material-ui/core/TextField'\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Button from '@material-ui/core/Button'\n\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\"\n    }\n});\n\n\nexport const RenderDatePicker = ({ input: { onChange, value }, meta: {touched, invalid, error} }) => {\n    return (\n        <div>\n            <ThemeProvider theme={theme}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DatePicker\n                    onChange={onChange}\n                    error={touched && invalid}\n                    helperText={touched && error}\n                    disableFuture\n                    value={value}\n                    label='Release date'\n                    views={[\"year\"]}/>\n                </MuiPickersUtilsProvider>\n            </ThemeProvider>\n        </div>\n        \n    )\n}\n\nexport const RenderTextField = ({\n    label,\n    input,\n    meta: { touched, invalid, error },\n    ...custom\n  }) => (\n    <ThemeProvider theme={theme}>\n        <TextField\n        variant=\"outlined\"\n        label={label}\n        placeholder={label}\n        error={touched && invalid} \n        size=\"small\" \n        helperText={touched && error}\n        {...input}\n        {...custom}\n         />\n    </ThemeProvider>\n)\n\nexport const RenderSelectField = ({label, input, meta: { touched, invalid, error }, ...custom}) => {\n    return (\n        <div>\n            <ThemeProvider theme={theme}>\n            <FormControl error={touched && error}>\n            <InputLabel htmlFor=\"age-native-simple\">Genre</InputLabel>\n            <Select\n            native\n            {...input}\n            {...custom}\n            inputProps={{\n                name: 'age',\n                id: 'age-native-simple'\n            }}\n            />\n            </FormControl>\n            </ThemeProvider>\n        </div>\n    )\n\n}\n\nexport const RenderRadioButton = ({ input, ...rest }) => (\n    <ThemeProvider theme={theme}>\n        <FormControl>\n            <RadioGroup {...input} {...rest}>\n                <FormControlLabel value=\"show\" control={<Radio />} label=\"Show\" />\n                <FormControlLabel value=\"movie\" control={<Radio />} label=\"Movie\" />\n            </RadioGroup>\n        </FormControl>\n    </ThemeProvider>\n  )\n\n","import React from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './Header.module.css'\nimport Fade from '@material-ui/core/Fade';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { Field, reduxForm } from \"redux-form\"\nimport Radio from '@material-ui/core/Radio'\nimport Button from '@material-ui/core/Button';\nimport moment from 'moment'\nimport { validate, asyncValidate } from '../../validators/validate'\nimport { RenderTextField, RenderSelectField, RenderRadioButton, RenderDatePicker } from '../FormControls/Forms'\n\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: 'rgb(25, 24, 27)',\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\n\n\nconst AddItemForm = (props) => {\n    const { handleSubmit, pristine, reset, submitting} = props\n    return(\n        <div>\n            <center><h3 className={styles.modalTitle}>Add new item</h3></center>\n            <form onSubmit={handleSubmit} className={styles.modalForm}>\n                <div className={styles.titleField}>\n                    <Field name=\"title\" component={RenderTextField} label=\"Show or Movie Title\"/>\n                </div>\n                <div className={styles.typeField}>\n                    <Field name=\"category\" component={RenderRadioButton}>\n                        <Radio value=\"show\" label=\"show\"/>\n                        <Radio value=\"movie\" label=\"movie\"/>\n                    </Field>\n                </div>\n                <div>\n                    <Field name=\"year\" component={RenderDatePicker} label='year'/>\n                </div>\n                <div className={styles.genreField}>\n                    <Field name=\"genre\" component={RenderSelectField} label=\"Genre\">\n                        <option value={'Action'}>Action</option>\n                        <option value={'Drama'}>Drama</option>\n                        <option value={'Horror'}>Horror</option>\n                    </Field>\n                </div>\n                <div>\n                    <Field name=\"rating\" className={styles.ratingField} component={RenderTextField} label=\"Rating\" type=\"number\"/>\n                    <Field name=\"image\" component={RenderTextField} label=\"Image Link\"/>\n                </div>\n                <div>\n                    <Field name=\"link\" component={RenderTextField} label=\"Watch online Link\"/>\n                </div>\n                <div className={styles.modalButtons}>\n                    <Button variant=\"contained\" onClick={props.handleClose}>CANCEL</Button>\n                    <Button className={styles.modalBtn} variant=\"contained\" disabled={pristine || submitting} color=\"secondary\" type='submit'>ADD ITEM</Button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst ReduxAddItemForm = reduxForm({\n    form: \"newItem\",\n    validate,\n    asyncValidate\n})(AddItemForm);\n\nconst AddItemModal = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    \n    const handleClose = () => {\n        setOpen(false);\n      };\n\n    const handleSubmit = (formData) => {\n        const formatYear = moment(formData.year).format('YYYY');\n        formData.year = formatYear\n        props.addItem(formData);\n        handleClose();\n    }\n    return(\n        <div>\n            <button onClick={handleOpen} className={styles.add_btn}>Add show or movie</button>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                timeout: 500,\n                }}>\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <ReduxAddItemForm onSubmit={handleSubmit} handleClose={handleClose}/>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    )\n    \n}\n\n\n\n\nexport default AddItemModal;","import { api } from '../api/api'\n\nconst SET_CONTENT = 'SET-CONTENT';\nconst ADD_ITEM = 'ADD_ITEM';\nconst UPDATE_ITEM = 'UPDATE_ITEM';\nconst REMOVE_ITEM = 'REMOVE_ITEM';\nconst SET_EDITED_ITEM = 'SET_EDITED_ITEM';\n\n\nexport const setContentAction = (shows, movies, totalShows, totalMovies) => ({ type: SET_CONTENT, shows, movies })\nexport const addNewItemAction = (data) => ({ type: ADD_ITEM, data});\nexport const updateItemAction = (data) => ({ type: UPDATE_ITEM, data});\nexport const removeItemAction = (id, category) => ({ type: REMOVE_ITEM, id, category});\nexport const setEditedItem = (item) => ({ type: SET_EDITED_ITEM, item })\n\nlet initialState = {\n    shows: [],\n    movies: [],\n    editedItem: null,\n    totalShows: null,\n    totalMovies: null\n}\n\nexport const getContent = () => {\n    return(dispatch) => {\n        let getShowsPromise = api.getShows();\n        let getMoviesPromise = api.getMovies();\n        Promise.all([getShowsPromise, getMoviesPromise]).then((response) => {\n            dispatch(setContentAction(\n                response[0].data.shows, response[1].data.movies, \n                response[0].data.totalShows, response[1].data.totalMovies))\n        })\n    } \n}\n\nexport const addItem = (data) => {\n    return(dispatch) => {\n        api.addItem(data).then((response) => {\n            if(response.status === 201) {\n                dispatch(addNewItemAction(response.data));\n            }\n        })\n    } \n}\n\nexport const updateItem = (data) => {\n    return(dispatch) => {\n        api.updateItem(data).then((response) => {\n            if(response.status === 200) {\n                dispatch(updateItemAction(response.data));\n            }\n        })\n    } \n}\n\nexport const removeItem = (id, category) => {\n    return(dispatch) => {\n        api.removeItem(id, category).then((response) => {\n            if(response.status === 200) {\n                dispatch(removeItemAction(response.data.item.id, response.data.category));\n            }\n        })\n    } \n}\n\n\nconst contentReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CONTENT:\n            return {\n                ...state,\n                shows: action.shows,\n                movies: action.movies,\n                totalShows: action.totalShows,\n                totalMovies: action.totalMovies\n            }\n        case ADD_ITEM:\n            if(action.data.category == \"show\") {\n                return {\n                    ...state,\n                    shows: [...state.shows, action.data.value]\n                }\n            }\n            if(action.data.category == \"movie\") {\n                return {\n                    ...state,\n                    movies: [...state.movies, action.data.value]\n                }\n            }\n        case UPDATE_ITEM:\n            \n            if(action.data.category === \"show\") {\n                return {\n                    ...state,\n                    shows: state.shows.map(s => {\n                        if(s.id === action.data.item.id) {\n                            return {...action.data.item}\n                        }\n                        return s;\n                    })\n                }\n            }\n            if(action.data.category === \"movie\") {\n                return {\n                    ...state,\n                    movies: state.movies.map(s => {\n                        if(s.id === action.data.item.id) {\n                            return {...action.data.item}\n                        }\n                        return s;\n                    })\n                }\n            }\n        case SET_EDITED_ITEM: {\n            return {\n                ...state,\n                editedItem: action.item\n            }\n        }\n        case REMOVE_ITEM:\n            if(action.category == \"show\") {\n                state.shows.map(s => {\n                    if(s.id === action.id) {\n                        let index = state.shows.indexOf(s);\n                        state.shows.splice(index, 1);\n                    }\n                })\n                return {\n                    ...state,\n                    shows: [...state.shows]\n                    \n                }\n            }\n            if(action.category == \"movie\") {\n                state.movies.map(m => {\n                    if(m.id === action.id) {\n                        let index = state.movies.indexOf(m);\n                        state.movies.splice(index, 1);\n                    }\n                })\n                return {\n                    ...state,\n                    movies: [...state.movies]\n                    \n                }\n            }\n            \n        default:\n            return state;\n    }\n}\n\nexport default contentReducer;","import React from 'react'\nimport styles from './Header.module.css'\nimport { NavLink } from 'react-router-dom';\nimport AddItemModal from './AddItemModal'\nimport { addItem } from '../../redux/reducers'\nimport { connect } from 'react-redux';\n\n\nclass Header extends React.Component {\n    addItem = (data) => {\n        this.props.addItem(data);\n    }\n    render() {\n        return(\n            <div>\n                <div className={styles.wrapper}>\n                    <div className={styles.header_block}>\n                        <img className={styles.logo} src='https://logos-world.net/wp-content/uploads/2020/04/Netflix-Logo.png'/>\n                        <div className={styles.buttons_block}>\n                            <div>\n                                <NavLink to = '/home' activeClassName={styles.activeLink}><button className = {styles.btn}>Home</button></NavLink>\n                                <NavLink to = '/tv-shows' activeClassName={styles.activeLink}><button className = {styles.btn}>Shows</button></NavLink>\n                                <NavLink to = '/movies' activeClassName={styles.activeLink}><button className = {styles.btn}>Movies</button></NavLink>\n                                <NavLink to = '/settings' activeClassName={styles.activeLink}><button className = {styles.btn}>Settings</button></NavLink>\n                                <NavLink to = '/logout' activeClassName={styles.activeLink}><button className = {styles.btn}>Logout</button></NavLink>\n                            </div>\n                        </div>\n                    </div>\n                    <AddItemModal addItem={this.addItem}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return null;\n}\n\nexport default connect(mapStateToProps, { addItem })(Header);","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport styles from './Content.module.css'\n\n\nconst options = [\n    'Edit',\n  ];\n\n\nconst ItemOptionsMenu = (props) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);};\n\n    const handleClose = (option, data) => {\n        if(option === 'Edit' && !props.editMode) {\n            props.setEditMode(true)\n            data.category = props.category;\n            props.setItemData(data);\n            props.setItemId(data.id);\n            props.setEditedItem(data);\n        }\n    }\n    return(\n        <div className={styles.optionsMenu}>\n            <IconButton\n                aria-label=\"more\"\n                aria-controls=\"long-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                color=\"secondary\"\n                >\n                <MoreVertIcon/>\n            </IconButton>\n            <Menu\n                id=\"long-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                PaperProps={{\n                style: {\n                    width: '20ch',},}}>\n                {options.map((option) => (\n                <MenuItem key={option} onClick={() => {handleClose(option, props.data)}}>\n                    {option}\n                </MenuItem>\n                ))}\n            </Menu>\n        </div>\n    )\n}\n\nexport default ItemOptionsMenu;","import { React, useState } from 'react'\nimport styles from './Content.module.css'\nimport ItemOptionsMenu from './ItemOptionsMenu'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { RenderDatePicker, RenderTextField, RenderSelectField } from '../FormControls/Forms'\nimport { Field, reduxForm } from \"redux-form\"\nimport { validate, asyncValidate } from '../../validators/validate'\nimport moment from 'moment'\nimport { connect } from 'react-redux'\nimport { RiMovieLine } from 'react-icons/ri'\n\nlet EditModeForm = (props) => {\n    const { handleSubmit, pristine, reset, submitting} = props\n    \n    const removeItem = (id, category) => {\n        props.removeItem(id, category);\n        props.setEditMode(false)\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className={styles.editCard}>\n            <div className={styles.cardHeader}>\n            <span className={styles.itemTitle}>\n                <div className={styles.editTitleField}>\n                    <Field type=\"text\" name=\"title\" component={RenderTextField} label=\"Show or Movie title\"/>\n                </div>\n            </span>\n            </div>\n            <div className={styles.editImageField}>\n                <Field name=\"image\" component={RenderTextField} label=\"Image link\" />\n            </div>\n            <div>\n                <Field name=\"year\" component={RenderDatePicker} label=\"year\"/>\n            </div>\n            <div className={styles.editGenreField}>\n                <Field name=\"genre\" component={RenderSelectField}>\n                        <option value={'Action'}>Action</option>\n                        <option value={'Drama'}>Drama</option>\n                        <option value={'Horror'}>Horror</option>\n                </Field>\n            </div>\n            <div>\n                <Field type=\"number\" name=\"rating\" component={RenderTextField} label=\"Rating\" />\n            </div>\n            <div className={styles.editLinkField}>\n                <Field type=\"link\" name=\"link\" component={RenderTextField} label=\"Watch online link\" />\n            </div>\n            <div className={styles.editModeButtons}>\n                <Button size=\"small\" variant=\"contained\" onClick={() => { removeItem(props.itemData.id, \"show\")}} className={styles.modalBtn}>DELETE</Button>\n                <Button className={styles.editBtn} size=\"small\" color=\"primary\" variant=\"contained\" type='submit'>UPDATE ITEM</Button>\n            </div>\n            </div>\n        </form>\n    )\n}\n\n\n\nEditModeForm = reduxForm({\n    form: \"showEdit\",\n    validate,\n    asyncValidate,\n    enableReinitialize: true\n})(EditModeForm);\n\nEditModeForm = connect(\n    state => ({\n      initialValues: state.content.editedItem\n    })\n  )(EditModeForm)\n  \n\n\n\nconst Shows = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [itemData, setItemData] = useState(null);\n    const [itemId, setItemId] = useState(null);\n\n    const submitEditMode = (data) => {\n        if(editMode) {\n            setEditMode(false);\n            const formatYear = moment(data.year).format('YYYY');\n            data.year = formatYear.toString();\n            data.category = \"show\";\n            data.id = itemId;\n            setItemData(data);\n            props.updateItem(data);\n            \n        }\n        else {\n            setEditMode(true)\n        }\n    }\n\n    let shows = props.showsList.map(s =>\n            <div>\n                { editMode && itemData.id == s.id ?\n                    <EditModeForm \n                        itemData={itemData} \n                        onSubmit={submitEditMode} \n                        removeItem={props.removeItem}\n                        setEditMode={setEditMode}\n                         />\n                :\n                <div className={styles.contentCard}>\n                    <div className={styles.cardHeader}>\n                        <span className={styles.itemTitle}>{ s.title }</span>\n                        <ItemOptionsMenu \n                            editMode={editMode}\n                            setEditMode={setEditMode}\n                            setEditedItem={props.setEditedItem}\n                            setItemId={setItemId} \n                            setItemData={setItemData}\n                            category={\"show\"}\n                            data={s}/>\n                    </div>\n                    <img className={styles.contentPhoto} src={s.image}/>\n                    <span>Year: {s.year}</span>\n                    <span>Genre: {s.genre}</span>\n                    <span>Rating: {s.rating}</span>\n                    <div className={styles.watchBlock}>\n                        <button>WATCH ONLINE  <RiMovieLine/></button> \n                    </div>\n                </div>\n                }\n            </div>\n        )\n    return(\n        <div>\n            <div className={styles.typeText}>TV SHOWS</div>\n            <div className={styles.content_wrapper}>\n                { shows }\n            </div>\n        </div>\n    )\n}\n\nexport default Shows;","import { React, useState } from 'react'\nimport styles from './Content.module.css'\nimport ItemOptionsMenu from './ItemOptionsMenu'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { RenderDatePicker, RenderTextField, RenderSelectField } from '../FormControls/Forms'\nimport { Field, reduxForm } from \"redux-form\"\nimport { validate, asyncValidate } from '../../validators/validate'\nimport moment from 'moment'\nimport { connect } from 'react-redux'\nimport { RiMovieLine } from 'react-icons/ri'\n\nlet EditModeForm = (props) => {\n    const { handleSubmit, pristine, reset, submitting} = props\n    \n    const removeItem = (id, category) => {\n        props.removeItem(id, category);\n        props.setEditMode(false)\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className={styles.editCard}>\n            <div className={styles.cardHeader}>\n            <span className={styles.itemTitle}>\n                <div className={styles.editTitleField}>\n                    <Field type=\"text\" name=\"title\" component={RenderTextField} label=\"Show or Movie title\"/>\n                </div>\n            </span>\n            </div>\n            <div className={styles.editImageField}>\n                <Field name=\"image\" component={RenderTextField} label=\"Image link\" />\n            </div>\n            <div>\n                <Field name=\"year\" component={RenderDatePicker} label=\"year\"/>\n            </div>\n            <div className={styles.editGenreField}>\n                <Field name=\"genre\" component={RenderSelectField}>\n                        <option value={'Action'}>Action</option>\n                        <option value={'Drama'}>Drama</option>\n                        <option value={'Horror'}>Horror</option>\n                </Field>\n            </div>\n            <div>\n                <Field type=\"number\" name=\"rating\" component={RenderTextField} label=\"Rating\" />\n            </div>\n            <div className={styles.editLinkField}>\n                <Field type=\"link\" name=\"link\" component={RenderTextField} label=\"Watch online link\" />\n            </div>\n            <div className={styles.editModeButtons}>\n                <Button size=\"small\" variant=\"contained\" onClick={() => { removeItem(props.itemData.id, \"movie\")}} className={styles.modalBtn}>DELETE</Button>\n                <Button className={styles.editBtn} size=\"small\" color=\"primary\" variant=\"contained\" type='submit'>UPDATE ITEM</Button>\n            </div>\n            </div>\n        </form>\n    )\n}\n\n\n\nEditModeForm = reduxForm({\n    form: \"movieEdit\",\n    validate,\n    asyncValidate,\n    enableReinitialize: true\n})(EditModeForm);\n\nEditModeForm = connect(\n    state => ({\n      initialValues: state.content.editedItem\n    })\n  )(EditModeForm)\n  \n\n\n\nconst Movies = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [itemData, setItemData] = useState(null);\n    const [itemId, setItemId] = useState(null);\n\n    const submitEditMode = (data) => {\n        if(editMode) {\n            setEditMode(false);\n            setItemData(data);\n            const formatYear = moment(data.year).format('YYYY');\n            data.year = formatYear.toString();\n            data.category = \"movie\";\n            data.id = itemId;\n            props.updateItem(data);\n            \n        }\n        else {\n            setEditMode(true)\n        }\n    }\n\n    let movies = props.moviesList.map(s =>\n            <div>\n                { editMode && itemData.id == s.id ?\n                    <EditModeForm \n                        itemData={itemData} \n                        onSubmit={submitEditMode} \n                        removeItem={props.removeItem}\n                        setEditMode={setEditMode}\n                         />\n                :\n                <div className={styles.contentCard}>\n                    <div className={styles.cardHeader}>\n                    <span className={styles.itemTitle}>{ s.title }</span>\n                    <ItemOptionsMenu \n                        editMode={editMode}\n                        setEditMode={setEditMode}\n                        setEditedItem={props.setEditedItem}\n                        setItemId={setItemId} \n                        setItemData={setItemData}\n                        category=\"movie\"\n                        data={s}/>\n                    </div>\n                    <img className={styles.contentPhoto} src={s.image}/>\n                    <span>Year: {s.year}</span>\n                    <span>Genre: {s.genre}</span>\n                    <span>Rating: {s.rating}</span>\n                    <div className={styles.watchBlock}>\n                        <button>WATCH ONLINE  <RiMovieLine/></button> \n                    </div>\n                </div>\n                }\n            </div>\n        )\n    return(\n        <div>\n            <div className={styles.typeText}>MOVIES</div>\n            <div className={styles.content_wrapper}>\n                { movies }\n            </div>\n        </div>\n    )\n}\n\nexport default Movies;","import React from 'react'\nimport Shows from './Shows'\nimport Movies from './Movies'\nimport styles from './Content.module.css'\nimport { connect } from 'react-redux';\nimport { getContent, updateItem, removeItem, setEditedItem } from '../../redux/reducers'\n\nclass Content extends React.Component {\n    componentDidMount() {\n        this.props.getContent();\n    }\n    updateItem = (data) => {\n        this.props.updateItem(data);\n    }\n    removeItem = (id, category) => {\n        this.props.removeItem(id, category);\n    }\n    render() {\n        return(\n            <div className={styles.wrapper}>\n                <Shows \n                    showsList={this.props.showsList} \n                    updateItem={this.updateItem} \n                    removeItem={this.removeItem}\n                    setEditedItem={this.props.setEditedItem}\n                    />\n                <Movies \n                    moviesList={this.props.moviesList} \n                    updateItem={this.updateItem} \n                    removeItem={this.removeItem}\n                    setEditedItem={this.props.setEditedItem}\n                    />\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        showsList: state.content.shows,\n        moviesList: state.content.movies\n    }\n}\nexport default connect(mapStateToProps, { getContent, updateItem, removeItem, setEditedItem })(Content);","import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Content from './components/Content/Content';\nimport { Route, Redirect } from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header/>\n        <div>\n          <Route exact path='/' render={ () => <Redirect to=\"/home\"/> } />\n          <Route path='/home' render={ () => <Content/> }/>\n        </div>\n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport contentReducer from './reducers'\nimport thunk from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\nimport logger from 'redux-logger'\n\n\nlet reducers = combineReducers({\n    content: contentReducer,\n    form: formReducer\n})\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk, logger)));\n\nwindow.store = store;\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Content_wrapper__1I7HN\",\"typeText\":\"Content_typeText__kFDqE\",\"content_wrapper\":\"Content_content_wrapper__3eu5J\",\"contentCard\":\"Content_contentCard__1C8cd\",\"watchBlock\":\"Content_watchBlock__1WrXK\",\"editCard\":\"Content_editCard__1OslB\",\"editTitleField\":\"Content_editTitleField__38NRs\",\"editImageField\":\"Content_editImageField__iwDCA\",\"editLinkField\":\"Content_editLinkField__1jwQ8\",\"editGenreField\":\"Content_editGenreField__pSC03\",\"cardHeader\":\"Content_cardHeader__3jx3A\",\"contentPhoto\":\"Content_contentPhoto__2IpnO\",\"editModeButtons\":\"Content_editModeButtons__2XwLW\",\"editBtn\":\"Content_editBtn__GYcO2\"};"],"sourceRoot":""}